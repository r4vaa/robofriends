{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowX","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCSCQ,EAdH,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEtB,OACI,sBAAKC,UAAW,mDAAhB,UACI,qBAAKC,IAAI,SAAQC,IAAG,gCAA2BH,EAA3B,cAExB,gCACG,mCAAMF,KACN,mCAAMC,YCaFK,EApBC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACK,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACA,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCOPC,EAfG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SAEI,uBAAOA,UAAU,mCAChBU,KAAK,SACJC,YAAY,gBACZC,SAAYH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAApE,SACCJ,EAAMK,YCeAC,E,kDAlBX,WAAYN,GAAO,IAAD,8BACV,cAAMA,IACDO,MAAO,CACRC,UAAU,GAHJ,E,8DAOAC,EAAMC,GAChBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAG7B,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAfCQ,aCoDZC,G,wDA9CX,aAAc,IAAD,8BACT,gBAeJC,eAAe,SAACC,GACX,EAAKJ,SAAS,CAAGK,YAAaD,EAAME,OAAOC,SAf5C,EAAKZ,MAAO,CACRjB,OAAQ,GACR2B,YAAa,IAJR,E,gEASO,IAAD,OACfG,MAAM,8CAA8C5C,MAAK,SAAA6C,GAAQ,OAAGA,EAASC,UAC5E9C,MAAK,SAAA+C,GAAK,OAAG,EAAKX,SAAS,CAAEtB,OAAQiC,S,+BAUjC,IAAD,EAC4BZ,KAAKJ,MAA7BjB,EADJ,EACIA,OAAQ2B,EADZ,EACYA,YACVO,EAAiBlC,EAAOmC,QAAQ,SAAAC,GAClC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAErD,OAAQrC,EAAOuC,OAGX,sBAAK3C,UAAY,KAAjB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAiBgB,KAAKI,iBACjC,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAUkC,WAP5B,6C,GA5BMX,cCClBiB,IAASC,OAAQ,cAAC,EAAD,IAAOC,SAASC,eAAe,SAKhD5D,M","file":"static/js/main.d9919712.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card= ({name, email,id}) => {\r\n    \r\n    return(\r\n        <div className= 'bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots'src={`https://robohash.org//${id}?200*200`}/>\r\n        \r\n        <div>\r\n           <h2> {name}</h2> \r\n           <p>  {email}</p>\r\n        </div>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({ robots }) => {\r\n   \r\n   return(\r\n        <div> \r\n            {\r\n            robots.map((user, i) => {\r\n            return (\r\n            <Card \r\n                key= {i}\r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n             />\r\n                );\r\n            })\r\n        }\r\n            </div>\r\n       \r\n   );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n             type='search'\r\n              placeholder='search robots'\r\n              onChange = {searchChange}\r\n              />\r\n                  \r\n        </div>\r\n     \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{ overflowX: 'scroll', border:'5px solid black', height:'500px'}}>\r\n        {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n            super(props);\r\n            this.state ={\r\n                hasError: false\r\n            }\r\n    }\r\n\r\n    componentDidCatch(error,info) {\r\n            this.setState({hasError: true})\r\n    }\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Oooppp. that is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React ,{Component} from 'react';\r\nimport CardList from '../components/CardList'; \r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n \r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            robots: [],\r\n            searchfield: ''\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=> response.json())\r\n        .then(users =>this.setState({ robots: users }));\r\n        \r\n        \r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n         this.setState({  searchfield: event.target.value })\r\n    \r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter( robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n            return !robots.length ?\r\n            <h1>LOADING</h1>:\r\n            (\r\n                <div className = 'tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange = { this.onSearchChange }/>\r\n                    <Scroll>\r\n                    <ErrorBoundry>\r\n                    <CardList robots = {filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n                \r\n            );\r\n\r\n        }\r\n      \r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\n\nReactDOM.render( <App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}